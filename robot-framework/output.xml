<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0.1 (Python 3.12.5 on darwin)" generated="2024-08-15T13:14:54.927852" rpa="false" schemaversion="5">
<suite id="s1" name="testSuite1" source="/Users/petrisadinmaki/Work/Delfoi/JAX-testing-demo/robot-framework/tests/testSuite1.robot">
<kw name="Setup suite" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2024-08-15T13:14:55.078863" level="INFO">Start java application</msg>
<arg>Start java application</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-08-15T13:14:55.078757" elapsed="0.000154"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2024-08-15T13:14:55.079178" level="INFO">Starting process:
mvn clean install</msg>
<msg time="2024-08-15T13:14:55.083167" level="INFO">Waiting for process to complete.</msg>
<msg time="2024-08-15T13:15:33.570720" level="INFO">Process completed.</msg>
<arg>mvn clean install</arg>
<arg>shell=True</arg>
<arg>cwd=${JAVA_DIR}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2024-08-15T13:14:55.079014" elapsed="38.491958"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2024-08-15T13:15:33.572015" level="INFO">Starting process:
java -jar target/jaxrs-quickstart-1.0-SNAPSHOT-jar-with-dependencies.jar</msg>
<msg time="2024-08-15T13:15:33.577337" level="INFO">${process} = &lt;Popen: returncode: None args: 'java -jar target/jaxrs-quickstart-1.0-SNAPSH...&gt;</msg>
<var>${process}</var>
<arg>java -jar target/jaxrs-quickstart-1.0-SNAPSHOT-jar-with-dependencies.jar</arg>
<arg>shell=True</arg>
<arg>cwd=${JAVA_DIR}</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-08-15T13:15:33.571530" elapsed="0.005995"/>
</kw>
<kw name="Wait For Process" owner="Process">
<msg time="2024-08-15T13:15:33.578760" level="INFO">Waiting for process to complete.</msg>
<msg time="2024-08-15T13:15:34.299777" level="INFO">Process completed.</msg>
<arg>${process}</arg>
<arg>timeout=10s</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="PASS" start="2024-08-15T13:15:33.578109" elapsed="0.721926"/>
</kw>
<kw name="Log datetime information">
<kw name="Get Current Date" owner="DateTime">
<msg time="2024-08-15T13:15:34.301619" level="INFO">${date} = 2024-08-15 13:15:34.301</msg>
<var>${date}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2024-08-15T13:15:34.301177" elapsed="0.000476"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.301933" level="INFO">2024-08-15 13:15:34.301</msg>
<arg>${date}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-08-15T13:15:34.301775" elapsed="0.000202"/>
</kw>
<status status="PASS" start="2024-08-15T13:15:34.300653" elapsed="0.001392"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.302233" level="INFO">Test execution started</msg>
<arg>Test execution started</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-08-15T13:15:34.302144" elapsed="0.000132"/>
</kw>
<status status="PASS" start="2024-08-15T13:14:55.078215" elapsed="39.224138"/>
</kw>
<test id="s1-t1" name="TestPing" line="18">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-15T13:15:34.303314" level="INFO">Creating Session using : alias=ping, url=http://localhost:8080/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>ping</arg>
<arg>${baseUrl}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-15T13:15:34.303044" elapsed="0.000578"/>
</kw>
<kw name="HEAD On Session" owner="RequestsLibrary">
<msg time="2024-08-15T13:15:34.319192" level="INFO">HEAD Request : url=http://localhost:8080/ping 
 path_url=/ping 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-08-15T13:15:34.319258" level="INFO">HEAD Response : url=http://localhost:8080/ping 
 status=204, reason=No Content 
 headers={} 
 body=None 
 </msg>
<msg time="2024-08-15T13:15:34.319408" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>ping</arg>
<arg>/ping</arg>
<doc>Sends a HEAD request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-15T13:15:34.303843" elapsed="0.015592"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.320254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.319667" elapsed="0.000655"/>
</kw>
<doc>Test the ping endpoint (empty)</doc>
<status status="PASS" start="2024-08-15T13:15:34.302478" elapsed="0.018046"/>
</test>
<test id="s1-t2" name="TestPong" line="24">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-15T13:15:34.321207" level="INFO">Creating Session using : alias=pong, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>pong</arg>
<arg>http://localhost:8080</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-15T13:15:34.321095" elapsed="0.000276"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-15T13:15:34.327878" level="INFO">GET Request : url=http://localhost:8080/pong 
 path_url=/pong 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-08-15T13:15:34.327994" level="INFO">GET Response : url=http://localhost:8080/pong 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json', 'Content-Length': '46'} 
 body={"city":"chicago","name":"jon doe","age":"22"} 
 </msg>
<msg time="2024-08-15T13:15:34.328121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>pong</arg>
<arg>/pong</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-15T13:15:34.321527" elapsed="0.006620"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.329040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.328390" elapsed="0.000721"/>
</kw>
<kw name="Json should have node with value">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-15T13:15:34.350598" level="INFO">${nodeValue} = ['chicago']</msg>
<var>${nodeValue}</var>
<arg>${json}</arg>
<arg>${nodeName}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-15T13:15:34.330351" elapsed="0.020357"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${nodeValue}[0]</arg>
<arg>${expectedNodeValue}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.350880" elapsed="0.000219"/>
</kw>
<arg>${response.json()}</arg>
<arg>$.city</arg>
<arg>chicago</arg>
<status status="PASS" start="2024-08-15T13:15:34.329380" elapsed="0.021779"/>
</kw>
<kw name="Json should have node with value">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-15T13:15:34.368125" level="INFO">${nodeValue} = ['jon doe']</msg>
<var>${nodeValue}</var>
<arg>${json}</arg>
<arg>${nodeName}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-15T13:15:34.352005" elapsed="0.016152"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${nodeValue}[0]</arg>
<arg>${expectedNodeValue}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.368288" elapsed="0.000204"/>
</kw>
<arg>${response.json()}</arg>
<arg>$.name</arg>
<arg>jon doe</arg>
<status status="PASS" start="2024-08-15T13:15:34.351398" elapsed="0.017238"/>
</kw>
<kw name="Json should have node with value">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-15T13:15:34.385705" level="INFO">${nodeValue} = ['22']</msg>
<var>${nodeValue}</var>
<arg>${json}</arg>
<arg>${nodeName}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-15T13:15:34.369523" elapsed="0.016212"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${nodeValue}[0]</arg>
<arg>${expectedNodeValue}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.385866" elapsed="0.000201"/>
</kw>
<arg>${response.json()}</arg>
<arg>$.age</arg>
<arg>22</arg>
<status status="PASS" start="2024-08-15T13:15:34.368918" elapsed="0.017209"/>
</kw>
<doc>Test the pong endpoint (json)</doc>
<status status="PASS" start="2024-08-15T13:15:34.320777" elapsed="0.065552"/>
</test>
<test id="s1-t3" name="TestPingPong" line="33">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-15T13:15:34.387266" level="INFO">Creating Session using : alias=pingpong, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>pingpong</arg>
<arg>http://localhost:8080</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-15T13:15:34.387068" elapsed="0.000327"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-15T13:15:34.393870" level="INFO">GET Request : url=http://localhost:8080/pingpong/getpingpong 
 path_url=/pingpong/getpingpong 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-08-15T13:15:34.394068" level="INFO">GET Response : url=http://localhost:8080/pingpong/getpingpong 
 status=200, reason=OK 
 headers={'Content-Type': 'text/xml', 'Content-Length': '64'} 
 body=&lt;xml&gt;&lt;city&gt;chicago&lt;/city&gt;&lt;name&gt;jon doe&lt;/name&gt;&lt;age&gt;22&lt;/age&gt;&lt;/xml&gt; 
 </msg>
<msg time="2024-08-15T13:15:34.394343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>pingpong</arg>
<arg>/pingpong/getpingpong</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-15T13:15:34.387611" elapsed="0.006771"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.395363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.394728" elapsed="0.000694"/>
</kw>
<kw name="Parse Xml" owner="XML">
<msg time="2024-08-15T13:15:34.396430" level="INFO">${xml} = &lt;Element 'xml' at 0x108b03b00&gt;</msg>
<var>${xml}</var>
<arg>${response.text}</arg>
<doc>Parses the given XML file or string into an element structure.</doc>
<status status="PASS" start="2024-08-15T13:15:34.395680" elapsed="0.000775"/>
</kw>
<kw name="Xml should have node with value">
<kw name="Get Element Text" owner="XML">
<msg time="2024-08-15T13:15:34.397302" level="INFO">${nodeValue} = chicago</msg>
<var>${nodeValue}</var>
<arg>${xml}</arg>
<arg>${nodeName}</arg>
<doc>Returns all text of the element, possibly whitespace normalized.</doc>
<status status="PASS" start="2024-08-15T13:15:34.397109" elapsed="0.000215"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${nodeValue}</arg>
<arg>${expectedNodeValue}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.397414" elapsed="0.000165"/>
</kw>
<arg>${xml}</arg>
<arg>city</arg>
<arg>chicago</arg>
<status status="PASS" start="2024-08-15T13:15:34.396809" elapsed="0.000822"/>
</kw>
<kw name="Xml should have node with value">
<kw name="Get Element Text" owner="XML">
<msg time="2024-08-15T13:15:34.398387" level="INFO">${nodeValue} = jon doe</msg>
<var>${nodeValue}</var>
<arg>${xml}</arg>
<arg>${nodeName}</arg>
<doc>Returns all text of the element, possibly whitespace normalized.</doc>
<status status="PASS" start="2024-08-15T13:15:34.398197" elapsed="0.000212"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${nodeValue}</arg>
<arg>${expectedNodeValue}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.398496" elapsed="0.000147"/>
</kw>
<arg>${xml}</arg>
<arg>name</arg>
<arg>jon doe</arg>
<status status="PASS" start="2024-08-15T13:15:34.397927" elapsed="0.000767"/>
</kw>
<kw name="Xml should have node with value">
<kw name="Get Element Text" owner="XML">
<msg time="2024-08-15T13:15:34.399437" level="INFO">${nodeValue} = 22</msg>
<var>${nodeValue}</var>
<arg>${xml}</arg>
<arg>${nodeName}</arg>
<doc>Returns all text of the element, possibly whitespace normalized.</doc>
<status status="PASS" start="2024-08-15T13:15:34.399280" elapsed="0.000177"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${nodeValue}</arg>
<arg>${expectedNodeValue}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-15T13:15:34.399540" elapsed="0.000142"/>
</kw>
<arg>${xml}</arg>
<arg>age</arg>
<arg>22</arg>
<status status="PASS" start="2024-08-15T13:15:34.398965" elapsed="0.000776"/>
</kw>
<doc>Test the pingpong endpoint (xml)</doc>
<status status="PASS" start="2024-08-15T13:15:34.386671" elapsed="0.013243"/>
</test>
<kw name="Teardown suite" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.400856" level="INFO">Close java application</msg>
<arg>Close java application</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-08-15T13:15:34.400778" elapsed="0.000136"/>
</kw>
<kw name="Terminate All Processes" owner="Process">
<doc>Terminates all still running processes started by this library.</doc>
<status status="PASS" start="2024-08-15T13:15:34.401014" elapsed="0.000122"/>
</kw>
<kw name="Log datetime information">
<kw name="Get Current Date" owner="DateTime">
<msg time="2024-08-15T13:15:34.401531" level="INFO">${date} = 2024-08-15 13:15:34.401</msg>
<var>${date}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2024-08-15T13:15:34.401365" elapsed="0.000213"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.401913" level="INFO">2024-08-15 13:15:34.401</msg>
<arg>${date}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-08-15T13:15:34.401730" elapsed="0.000258"/>
</kw>
<status status="PASS" start="2024-08-15T13:15:34.401237" elapsed="0.000819"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-08-15T13:15:34.402256" level="INFO">Test execution completed</msg>
<arg>Test execution completed</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-08-15T13:15:34.402186" elapsed="0.000102"/>
</kw>
<status status="PASS" start="2024-08-15T13:15:34.400627" elapsed="0.001706"/>
</kw>
<doc>This test suite tests endpoints of a RESTful web service that returns JSON and XML responses.
Rest apis on jaxrs-2.x-demo are implemented using JAX-RS.</doc>
<status status="PASS" start="2024-08-15T13:14:54.929592" elapsed="39.472794"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="testSuite1">testSuite1</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
